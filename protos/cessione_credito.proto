
syntax = "proto3";

message PropostaCessioneState {
    int32 id = 1;
    TipologiaCessione tipologia = 2;
    StatoPropostaCessione stato = 3;
    // Chiave pubblica cedente
    string cedente = 4;
    // id del gruppo acquirente che ha ottenuto la cessione
    int32 id_gruppo_acquirente = 5;
    string data_creazione = 6;
    string note = 7;
    // valore in cent di €
    uint32 importo_totale = 8;
    // valore in cent di € 
    uint32 credito_totale = 9;
    // map<id_offerta, offerta> offerte
    map<int32, OffertaProposta> offerte = 10;
    // map<id_file_documento, sha512 documento> file documenti
    map<int32, HashedFile> hash_documenti = 11;
     // map<id_file_contratto, sha512 contratto> file contratti
    map<int32, HashedFile> hash_contratti = 12;
}

enum TipologiaCessione {
    PREISTRUTTORIA = 0;
    ISTRUTTORIA = 1;
}

enum StatoPropostaCessione {
    PREPARAZIONE = 0;
    PROPOSTA = 1;
    PRESA_IN_CARICO = 2;
    VALIDATA = 3;
    INVALIDATA = 4;
    CONTRATTO_DA_FIRMARE = 5;
    CONTRATTO_FIRMATO = 6;
}

enum StatoOffertaProposta {
    PROPOSTA_CEDENTE = 0;
    PROPOSTA_ACQUIRENTE = 1;
    ACETTATA = 2;
    RIFIUTATA = 3;
    CANCELLATA = 4;
}

message OffertaProposta {
    int32 id_proposta = 1;
    int32 id_gruppo_acquirente = 2;
    StatoOffertaProposta stato = 3;
    // entità dell'offerta in cent di €
    uint32 valore = 4;
    string data_creazione = 5;
    string data_ultimo_aggiornamento = 6;
}

message HashedFile {
    int32 id_file = 1;
    string hash = 2;
}

message PropstaCessionePayload {
    // payload per aggiornare lo stato della proposta, opzionalmente si possono specificare delle note
    message AggiornamentoStato {
        StatoPropostaCessione nuovo_stato = 1;
        string note = 2;
    }
    // payload per caricare nuove offerte o aggiornare quelle esistenti (a seconda )
    message AggiornamentoOfferte {
        repeated OffertaProposta offerte_aggiornate = 1;
    }
    // payload per caricare nuove hash di documenti o aggiornare quelli esistenti
    message AggiornamentoDocumenti {
        repeated HashedFile documenti_aggiornati = 1;
    }
    // payload per caricare nuove hash di contratti o aggiornare quelli esistenti
    message AggiornamentoContratti {
        repeated HashedFile contratti_aggiornati = 1;
    }

    enum PayloadType {
        PAYLOAD_TYPE_UNSET = 0;
        NUOVA_PROPOSTA = 1;
        AGGIORNAMENTO_STATO = 2;
        AGGIORNAMENTO_OFFERTE = 3;
        AGGIORNAMENTO_DOCUMENTI = 4;
        AGGIORNAMENTO_CONTRATTI = 5;
    }

    PayloadType payload_type = 1;

    PropostaCessioneState nuova_proposta = 2;
    AggiornamentoStato aggiornamento_stato = 3;
    AggiornamentoOfferte aggiornamento_offerte = 4;
    AggiornamentoDocumenti aggiornamento_documenti = 5;
    AggiornamentoContratti aggiornamento_contratti = 6;
}
